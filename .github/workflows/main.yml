name: libdogecoin-py Build and upload to PyPI

# Build on every branch push, tag push, and pull request change:
on:
  push:
    branches:
      - '*-release'
    tags:
      - '**'
  push_request:
    branches:
      - '*-release'
    tags:
      - '**'

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-2019, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.2.0
        if: runner.os == 'Linux'

      - name: Setup WSL
        if: runner.os == 'Windows'
        uses: Vampire/setup-wsl@v1.3.1
      #- name: debug
      #  uses: lhotari/action-upterm@v1

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.13.1
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - run: pip install --upgrade pip cython setuptools build

      - name: Build sdist
        run: |
            mkdir -p wheels
            python -m build -s
            cp dist/*.tar.gz ./wheels

      - uses: actions/upload-artifact@v2
        with:
          path: wheels/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_test_password }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/

#      - name: Upload to PyPi
#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_PASSWORD }}
#          verbose: true
#          print_hash: true
